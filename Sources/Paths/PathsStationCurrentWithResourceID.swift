// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Station.Current {
    public func resourceID(_ resourceID: String) -> WithResourceID {
        WithResourceID(path: "\(path)/\(resourceID)")
    }

    public struct WithResourceID {
        /// Path: `/station/current/{resource_id}`
        public let path: String

        /// Current Station Data
        public func get(parameters: GetParameters) -> Request<geosphereAustriaAPIKit.StationGeoJSONSerializer> {
            Request(path: path, method: "GET", query: parameters.asQuery, id: "Current_Station_Data_station_current__resource_id__get")
        }

        public struct GetParameters {
            /// At least one parameter has to be specified.
            public var parameters: [String]
            /// At least one station id has to be specified.
            public var stationIDs: [String]
            public var outputFormat: OutputFormat?
            /// Filename without file extension
            public var filename: String?

            public enum OutputFormat: String, Codable, CaseIterable {
                case geojson
                case csv
            }

            public init(parameters: [String], stationIDs: [String], outputFormat: OutputFormat? = nil, filename: String? = nil) {
                self.parameters = parameters
                self.stationIDs = stationIDs
                self.outputFormat = outputFormat
                self.filename = filename
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(parameters, forKey: "parameters")
                encoder.encode(stationIDs, forKey: "station_ids")
                encoder.encode(outputFormat, forKey: "output_format")
                encoder.encode(filename, forKey: "filename")
                return encoder.items
            }
        }
    }
}
